from cassandra.cluster import Cluster
from cassandra.auth import PlainTextAuthProvider
import json

import matplotlib.pyplot as plt

# This secure connect bundle is autogenerated when you download your SCB, 
# if yours is different update the file name below
cloud_config= {
  'secure_connect_bundle': 'secure-connect-estoque.zip'
}

# This token JSON file is autogenerated when you download your token, 
# if yours is different update the file name below
with open("Estoque-token.json") as f:
    secrets = json.load(f)

CLIENT_ID = secrets["clientId"]
CLIENT_SECRET = secrets["secret"]

auth_provider = PlainTextAuthProvider(CLIENT_ID, CLIENT_SECRET)
cluster = Cluster(cloud=cloud_config, auth_provider=auth_provider)
session = cluster.connect()

row = session.execute("select release_version from system.local").one()
if row:
  print(row[0])
else:
  print("An error occurred.")

session.set_keyspace('estoque')

# Função para fazer a consulta no banco de dados
def consultar_estoque_carro(carro):
    query = f"SELECT nome, estante, quantidade FROM pecas WHERE carro = '{carro}' ALLOW FILTERING"
    result = session.execute(query)
    for row in result:
        print(f"Nome: {row.nome}, Estante: {row.estante}, Quantidade: {row.quantidade}")

# Solicitar o carro ao usuário
carro_usuario = input("Digite o nome do carro para consultar o estoque: ")

# Chamar a função de consulta
consultar_estoque_carro(carro_usuario)

# Fechar a sessão e desconectar do cluster
session.shutdown()
cluster.shutdown()

  